{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputRef = document.querySelector('#datetime-picker');\nconst startRef = document.querySelector('button[data-start]');\nconst secRef = document.querySelector('[data-seconds]');\nconst minRef = document.querySelector('[data-minutes]');\nconst hourRef = document.querySelector('[data-hours]');\nconst dayRef = document.querySelector('[data-days]');\n\nstartRef.addEventListener('click', onStart);\n\nlet timerId;\nlet currentDate;\nlet selectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const startTime = Date.now();\n    selectedDate = selectedDates[0];\n\n    if (selectedDate < startTime) {\n      startRef.setAttribute('disabled', true);\n      iziToast.error({\n        title: '',\n        message: 'Please, choose a date in the future',\n        position: 'bottomLeft',\n      });\n    }\n    if (selectedDate > startTime) {\n      startRef.removeAttribute('disabled', true);\n    }\n\n    currentDate = new Date(selectedDate);\n  },\n};\n\nfunction onStart() {\n  inputRef.setAttribute('disabled', 'true');\n  startRef.setAttribute('disabled', 'true');\n  timerId = setInterval(() => {\n    const currentStart = Date.now();\n    const TIME = currentDate - currentStart;\n    const getTime = convertMs(TIME);\n\n    secRef.textContent = getTime.seconds;\n    minRef.textContent = getTime.minutes;\n    hourRef.textContent = getTime.hours;\n    dayRef.textContent = getTime.days;\n\n    if (TIME < 1000) {\n      clearInterval(timerId);\n    }\n  }, 1000);\n}\n\nflatpickr(inputRef, options);\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = addLeadingZero(Math.floor(ms / day));\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["inputRef","startRef","secRef","minRef","hourRef","dayRef","onStart","timerId","currentDate","selectedDate","options","selectedDates","startTime","iziToast","currentStart","TIME","getTime","convertMs","flatpickr","addLeadingZero","value","ms","days","hours","minutes","seconds"],"mappings":"0IAMA,MAAMA,EAAW,SAAS,cAAc,kBAAkB,EACpDC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAS,SAAS,cAAc,gBAAgB,EAChDC,EAAS,SAAS,cAAc,gBAAgB,EAChDC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAS,SAAS,cAAc,aAAa,EAEnDJ,EAAS,iBAAiB,QAASK,CAAO,EAE1C,IAAIC,EACAC,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAY,KAAK,MACvBH,EAAeE,EAAc,GAEzBF,EAAeG,IACjBX,EAAS,aAAa,WAAY,EAAI,EACtCY,EAAS,MAAM,CACb,MAAO,GACP,QAAS,sCACT,SAAU,YAClB,CAAO,GAECJ,EAAeG,GACjBX,EAAS,gBAAgB,WAAY,EAAI,EAG3CO,EAAc,IAAI,KAAKC,CAAY,CACpC,CACH,EAEA,SAASH,GAAU,CACjBN,EAAS,aAAa,WAAY,MAAM,EACxCC,EAAS,aAAa,WAAY,MAAM,EACxCM,EAAU,YAAY,IAAM,CAC1B,MAAMO,EAAe,KAAK,MACpBC,EAAOP,EAAcM,EACrBE,EAAUC,EAAUF,CAAI,EAE9Bb,EAAO,YAAcc,EAAQ,QAC7Bb,EAAO,YAAca,EAAQ,QAC7BZ,EAAQ,YAAcY,EAAQ,MAC9BX,EAAO,YAAcW,EAAQ,KAEzBD,EAAO,KACT,cAAcR,CAAO,CAExB,EAAE,GAAI,CACT,CAEAW,EAAUlB,EAAUU,CAAO,EAE3B,SAASS,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASH,EAAUI,EAAI,CAMrB,MAAMC,EAAOH,EAAe,KAAK,MAAME,EAAK,KAAG,CAAC,EAC1CE,EAAQJ,EAAe,KAAK,MAAOE,EAAK,MAAO,IAAI,CAAC,EACpDG,EAAUL,EAAe,KAAK,MAAQE,EAAK,MAAO,KAAQ,GAAM,CAAC,EACjEI,EAAUN,EACd,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,CACtD,EAEE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}